{
	"type": "collision",
	"script": [
		"boolean intersects(StructureStart*(pillar, other):",
			"NbtCompound data = pillar.pieces.(0).as(ScriptStructurePiece).data",
			"double*(",
				"expand = ceilInt(data.endR.asDouble() * 2.0L)",
				"minX   = other.minX - expand",
				"minY   = other.minY - expand",
				"minZ   = other.minZ - expand",
				"maxX   = other.maxX + expand + 1.0L",
				"maxY   = other.maxY + expand + 1.0L",
				"maxZ   = other.maxZ + expand + 1.0L",
				"startX = data.negX.asDouble()",
				"startY = data.negY.asDouble()",
				"startZ = data.negZ.asDouble()",
				"normX  = data.normX.asDouble()",
				"normY  = data.normY.asDouble()",
				"normZ  = data.normZ.asDouble()",
				"scalar = 0.0L",
			")",
			"return(",
				"(",
					"scalar = (minX - startX) / normX,,",
					"(startY + normY * scalar).isBetween[minY, maxY] &&",
					"(startZ + normZ * scalar).isBetween[minZ, maxZ]",
				")",
				"|| (",
					"scalar = (maxX - startX) / normX,,",
					"(startY + normY * scalar).isBetween[minY, maxY] &&",
					"(startZ + normZ * scalar).isBetween[minZ, maxZ]",
				")",
				"|| (",
					"scalar = (minY - startY) / normY,,",
					"(startX + normX * scalar).isBetween[minX, maxX] &&",
					"(startZ + normZ * scalar).isBetween[minZ, maxZ]",
				")",
				"|| (",
					"scalar = (maxY - startY) / normY,,",
					"(startX + normX * scalar).isBetween[minX, maxX] &&",
					"(startZ + normZ * scalar).isBetween[minZ, maxZ]",
				")",
				"|| (",
					"scalar = (minZ - startZ) / normZ,,",
					"(startX + normX * scalar).isBetween[minX, maxX] &&",
					"(startY + normY * scalar).isBetween[minY, maxY]",
				")",
				"|| (",
					"scalar = (maxZ - startZ) / normZ,,",
					"(startX + normX * scalar).isBetween[minX, maxX] &&",
					"(startY + normY * scalar).isBetween[minY, maxY]",
				")",
			")",
		")",

		"if (currentStart.structure.isIn('#bigglobe:nether_pillars'):",
			"if (otherStart.structure.isIn('#bigglobe:nether_pillars'):",
				"return(1)",
			")",
			"else (",
				"if (intersects(currentStart, otherStart):",
					"return(-1)",
				")",
				"else (",
					"return(1)",
				")",
			")",
		")",
		"else (",
			"if (otherStart.structure.isIn('#bigglobe:nether_pillars'):",
				"return(1)",
			")",
			"else (",
				"return(0)",
			")",
		")"
	]
}