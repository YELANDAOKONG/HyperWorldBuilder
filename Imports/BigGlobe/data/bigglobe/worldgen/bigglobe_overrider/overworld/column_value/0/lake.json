{
	"type": "column_value",
	"script": {
		"source": [
			"for (StructureStart start in structures:",
				"if (start.structure.isIn('#bigglobe:lakes'):",
					"ScriptStructurePiece piece = start.pieces.(0)",
					"double distance = sqrt((x - piece.midX) ^ 2 + (z - piece.midZ) ^ 2)",
					"double radius = piece.sizeX >> 1",
					"int topY = piece.data.topY.?asInt() ?: piece.maxY ;backwards compatibility",
					"double exactTarget = max(world_traits.`bigglobe:automatic_exact_surface_y`(start.minY), topY)",
					"double slopeTarget = max(world_traits.`bigglobe:automatic_slope_surface_y`(start.minY), topY)",
					"if (distance < radius:",
						"double fraction = (1.0L - (distance / radius) ^ 2) ^ 2",
						"fraction *= Grid2D('bigglobe:lake_noise').getValue(x, z)",
						"double oldSurfaceY = world_traits.`bigglobe:automatic_exact_surface_y`(start.minY)",
						"double newSurfaceY = mixLinear(exactTarget, piece.minY, fraction)",
						"world_traits.`bigglobe:automatic_exact_surface_y`(start.minY) = newSurfaceY",
						"world_traits.`bigglobe:automatic_slope_surface_y`(start.minY) = newSurfaceY",
						"float lakeChance = unmixSmooth(topY - 4, topY, newSurfaceY).as(float)",
						"world_traits.`bigglobe:automatic_snow_y`(start.minY) = mixLinear(",
							"newSurfaceY,",
							"world_traits.`bigglobe:automatic_snow_y`(start.minY) + (newSurfaceY - oldSurfaceY),",
							"lakeChance",
						")",

						"setSurfaceFoliage(start.minY, lakeChance)",
						"(worldSeed # 16x73675EE7D46B59A3UL).newSeed(x, z).unless (lakeChance:",
							"world_traits.`bigglobe:automatic_lake_surface_states`(start.minY) = LakeSurfaceStates.new(",
								"BlockState(piece.data.surface.asString()),",
								"BlockState(piece.data.subsurface.asString())",
							")",
						")",
					")",
					"else if (distance < radius + 16.0L:",
						"double fraction = unmixSmooth(radius, radius + 16.0L, distance)",
						"double oldSurfaceY = world_traits.`bigglobe:automatic_exact_surface_y`(start.minY)",
						"double newSurfaceY = mixLinear(exactTarget, oldSurfaceY, fraction)",
						"world_traits.`bigglobe:automatic_exact_surface_y`(start.minY) = newSurfaceY",
						"world_traits.`bigglobe:automatic_slope_surface_y`(start.minY) = mixLinear(slopeTarget, world_traits.`bigglobe:automatic_slope_surface_y`(start.minY), fraction)",
						"world_traits.`bigglobe:automatic_snow_y`(start.minY) += newSurfaceY - oldSurfaceY",
					")",
				")",
			")"
		],
		"includes": [
			"bigglobe:include/surface_manipulation"
		]
	}
}