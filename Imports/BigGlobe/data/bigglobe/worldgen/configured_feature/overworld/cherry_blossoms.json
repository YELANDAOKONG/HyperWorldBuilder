{
	"type": "bigglobe:script",
	"config": {
		"script": [
			"block (",
				"unless (isYLevelValid(:--originY): return(false))",
				"if (getBlockState(originX, originY, originZ).isAir(): continue())",
			")",
			"++originY",
			"float curve(float value, float coefficient:",
				"return(value > 0.0I ? value / (value + coefficient) : 0.0I)",
			")",
			"int randomCount(float chance:",
				"int count = 0",
				"while (random.nextBoolean(chance) && count < 4: ++count)",
				"return(count)",
			")",
			"String randomDirection(:",
				"random.switch ('north', 'south', 'east', 'west')",
			")",
			"float temperature = world_traits.`bigglobe:temperature_at_surface`",
			"float foliage = world_traits.`bigglobe:foliage_at_surface`",
			"float hotChance = unmixSmooth(0.75I, 0.5I, temperature)",
			"float temperateChance = unmixSmooth(0.125I, -0.125I, temperature)",
			"float coldChance = clamp(0.0I, 1.0I, 1.0I - world_traits.`bigglobe:snow_chance`)",
			"float forestChance = curve(foliage, 0.25I)",
			"float plainsChance = max(-foliage * (foliage + 1.0I), 0.0I)",
			"float petalChance = curve(world_traits.`bigglobe:magicalness` - 0.5I, 1.0I)",
			"float leafChance = curve(1.0I - world_traits.`bigglobe:magicalness`, 1.0I)",
			"random.switch (",

				";pink petals",
				"forestChance * petalChance * temperateChance: (",
					"int count = randomCount(forestChance * petalChance * temperateChance * coldChance)",
					"return(count > 0 && placeBlockState(originX, originY, originZ, BlockState('minecraft:pink_petals', flower_amount: count)))",
				"),",

				";leaf litter",
				"forestChance * leafChance * hotChance: (",
					"if (Block*(leafLitter := Block?('minecraft:leaf_litter')) != null:",
						"int count = randomCount(forestChance * leafChance * hotChance * coldChance)",
						"return(count > 0 && placeBlockState(originX, originY, originZ, BlockState(leafLitter, facing: randomDirection(), segment_amount: count)))",
					")",
				"),",

				";wildflowers",
				"plainsChance * hotChance: (",
					"if (Block?('minecraft:wildflowers') == null: return(false))",
					"float noise1 = Grid2D('bigglobe:wildflowers_1').getValue(originX, originZ).as(float)",
					"float noise2 = Grid2D('bigglobe:wildflowers_2').getValue(originX, originZ).as(float)",
					"Block wildflowers = null",
					"float gap = 0.125I",
					"if (noise1 > gap:",
						"if (noise2 > gap:",
							"wildflowers = Block?('minecraft:wildflowers')",
						")",
						"else if (noise2 < -gap:",
							"wildflowers = Block?('bigglobe:red_wildflowers')",
						")",
					")",
					"else if (noise1 < -gap:",
						"if (noise2 > gap:",
							"wildflowers = Block?('bigglobe:bluebonnets')",
						")",
						"else if (noise2 < -gap:",
							"wildflowers = Block?('bigglobe:violets')",
						")",
					")",
					"if (wildflowers != null:",
						"int count = randomCount(plainsChance * hotChance * coldChance)",
						"return(count > 0 && placeBlockState(originX, originY, originZ, BlockState(wildflowers, facing: randomDirection(), flower_amount: count)))",
					")",
				")",
			")",
			"return(false)"
		]
	}
}