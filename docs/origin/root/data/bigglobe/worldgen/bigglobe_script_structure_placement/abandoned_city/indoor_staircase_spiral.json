{
	"placement": [
		"WoodPalette palette = WoodPalette(data.palette.asString())",
		"boolean up = data.up",
		"boolean wallAt(int*(x, z):",
			"abs(x) <= 2 && abs(z) <= 2 && (",
				"int index = (z + 2) * 5 + (x + 2)",
				"2x10111_10101_10101_10001_11111 & (1 << index) != 0",
			")",
		")",
		"for (int*(x, z) in range[-2, 2]:",
			"if (abs(x) <= 1:",
				"if (abs(z) <= 1:",
					"if (x == 0 && z == 0:",
						"fillBlockStateReplaceable(x, 0, z, x, 4, z, palette.strippedLogState(axis: 'y'))",
					")",
					"else (",
						"int angle = roundInt(fastAtan2(x, z) * (8.0L / tau) - 1.0L) & 7",
						"int y = angle >> 1",
						"String type = angle & 1 != 0 ? 'top' : 'bottom'",
						"BlockState state = BlockState('minecraft:stone_brick_slab', type: type, waterlogged: false)",
						"setBlockStateReplaceable(x, y, z, state)",
						"if (y == 0: setBlockStateReplaceable(x, 4, z, state))",
					")",
				")",
				"else (",
					"fillBlockStateReplaceable(x, 0, z, x, 3, z, 'minecraft:stone_brick_wall[north=none,south=none,east=tall,west=tall,up=false,waterlogged=false]')",
					"setBlockState(x, 4, z, 'minecraft:smooth_stone_slab[type=double,waterlogged=false]')",
				")",
			")",
			"else (",
				"if (abs(z) <= 1:",
					"if (x != 2: fillBlockStateReplaceable(x, 0, z, x, 3, z, 'minecraft:stone_brick_wall[north=tall,south=tall,east=none,west=none,up=false,waterlogged=false]'))",
					"setBlockState(x, 4, z, 'minecraft:smooth_stone_slab[type=double,waterlogged=false]')",
				")",
				"else (",
					"fillBlockStateReplaceable(x, 0, z, x, 3, z, palette.strippedLogState(axis: 'y'))",
					"setBlockState(x, 4, z, 'minecraft:smooth_stone_slab[type=double,waterlogged=false]')",
				")",
			")",
			"if (!up && wallAt(x, z):",
				"setBlockState(x, 5, z,",
					"int connections = 0",
					"BlockState(",
						"'minecraft:cobblestone_wall',",
						"north: wallAt(x, z - 1).if (connections |= 1) ? 'low' : 'none',",
						"south: wallAt(x, z + 1).if (connections |= 2) ? 'low' : 'none',",
						"east:  wallAt(x + 1, z).if (connections |= 4) ? 'low' : 'none',",
						"west:  wallAt(x - 1, z).if (connections |= 8) ? 'low' : 'none',",
						"up: !(connections == 3 || connections == 12),",
						"waterlogged: false",
					")",
				")",
			")",
		")"
	]
}